language: cpp

addons:
    apt:
        packages:
            - cmake
            # SFML build dependencies
            - libpthread-stubs0-dev
            - libgl1-mesa-dev
            - libx11-dev
            - libx11-xcb-dev
            - libxcb-image0-dev
            - libxrandr-dev
            - libxcb-randr0-dev
            - libudev-dev
            - libfreetype6-dev
            - libglew-dev
            - libjpeg8-dev
            - libgpgme11-dev
            - libsndfile1-dev
            - libopenal-dev
            - libjpeg62

install:
    # C++17
    - echo ${COMPILER_ID}
    - |
        if [ "${COMPILER_ID}" == "gcc" ]; then
            sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
            sudo apt-get update -qq
            sudo apt-get install -qq -y g++-8 gcc-8
            sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 90
            sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 90
            sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 90
        fi
    - |
        if [ "${COMPILER_ID}" == "clang" ]; then
            export CXX=clang++
            export CC=clang
        fi

    # Include What You Use
    - sudo apt-get install -qq -y iwyu

    # SFML
    - sudo apt-get install -qq -y libsfml-dev
    - sudo apt-get install -qq -y pulseaudio

    # Coveralls
    - pip install --user cpp-coveralls

before_script:
    # Open a X screen
    - export DISPLAY=:99
    - /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x24
    - sleep 3

script:
    - mkdir build && cd build
    - |
        if [ "${COMPILER_ID}" == "gcc" ]; then
            cmake ..  $CMAKE_FLAGS -DBUILD_TESTS=TRUE -DCOVERAGE=TRUE -DCMAKE_BUILD_TYPE=Debug
        fi
    - |
        if [ "${COMPILER_ID}" == "clang" ]; then
            cmake ..  $CMAKE_FLAGS -DBUILD_TESTS=TRUE -DCMAKE_BUILD_TYPE=Debug
        fi
    - make
    - ./chip8_cpp_tests

after_success:
    # Coveralls
    - |
        if [ "${COMPILER_ID}" == "gcc" ]; then
            gcov --version
            pip show cpp-coveralls   
            coveralls --root .. 
               --exclude depends 
               --exclude test 
               --exclude assets 
               --exclude cmake 
               --exclude docs 
               --exclude build/CMakeFiles/3.12.4 
               --exclude build/CMakeFiles/feature_tests.c 
               --exclude build/CMakeFiles/feature_tests.cxx
        fi

matrix:
    include:
        - name: "Ubuntu GCC"
          os: linux
          dist: xenial
          compiler: gcc
          env: COMPILER_ID=gcc

        - name: "Ubuntu Clang"
          os: linux
          dist: xenial
          compiler: clang
          env: COMPILER_ID=clang
